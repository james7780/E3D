// for vector text

struct VECTORGLYPH {
	GLint numlines;
	GLbyte ls[8];
	GLbyte le[8];
};

#define GLYPH_WIDTH		12
#define GLYPH_HEIGHT	12

// coordinates of predefined points in vector glyph
Vector glyphPoints[11] = {
	Vector(-5, -6, 0),
	Vector( 0, -6, 0 ),
	Vector( 5, -6, 0 ),
	Vector( 5, -3, 0 ),
	Vector( 5, 0, 0 ),
	Vector( 5, 3, 0 ),
	Vector( 5, 6, 0 ),
	Vector( 0, 6, 0 ),
	Vector( -5, 6, 0 ),
	Vector( 0, 0, 0 ),
	Vector( -5, 0, 0 )
};

// vector glyph data references index of predefined points in glyphPoints above
VECTORGLYPH vecGlyph[64] = {
	4,		0, 2, 6, 8, 0, 0, 0, 0,		2, 6, 8, 0, 0, 0, 0, 0,	// 0
	1,		1, 0, 0, 0, 0, 0, 0, 0,		7, 0, 0, 0, 0, 0, 0, 0,	// 1
	5,		0, 2, 4,10, 8, 0, 0, 0, 	2, 4,10, 8, 6, 0, 0, 0,	// 2
	4, 		0, 2, 6,10, 0, 0, 0, 0,		2, 6, 8, 4, 0, 0, 0, 0,	// 3
	3, 		0, 10,2, 0, 0, 0, 0, 0,		10,4, 6, 0, 0, 0, 0, 0,	// 4
	5,		2, 0,10, 4, 6, 0, 0, 0,		0,10, 4, 6, 8, 0, 0, 0,	// 5
	5,		2, 0, 8, 6, 4, 0, 0, 0,		0, 8, 6, 4,10, 0, 0, 0,	// 6
	2, 		0, 2, 0, 0, 0, 0, 0, 0,		2, 6, 0, 0, 0, 0, 0, 0,	// 7
	5,		0, 2, 6, 8, 4, 0, 0, 0,		2, 6, 8, 0,10, 0, 0, 0,	// 8
	4, 		6, 2, 0,10, 0, 0, 0, 0,		2, 0,10, 4, 0, 0, 0, 0,	// 9
	4,		0, 2, 6, 8, 0, 0, 0, 0,		2, 6, 8, 0, 0, 0, 0, 0,	// 0
	4,		0, 2, 6, 8, 0, 0, 0, 0,		2, 6, 8, 0, 0, 0, 0, 0,	// 0
	4,		0, 2, 6, 8, 0, 0, 0, 0,		2, 6, 8, 0, 0, 0, 0, 0,	// 0
	4,		0, 2, 6, 8, 0, 0, 0, 0,		2, 6, 8, 0, 0, 0, 0, 0,	// 0
	4,		0, 2, 6, 8, 0, 0, 0, 0,		2, 6, 8, 0, 0, 0, 0, 0,	// 0
	4,		0, 2, 6, 8, 0, 0, 0, 0,		2, 6, 8, 0, 0, 0, 0, 0,	// 0
	4,		0, 2, 6, 8, 0, 0, 0, 0,		2, 6, 8, 0, 0, 0, 0, 0,	// 0
	5,		8,10, 1, 4, 4, 0, 0, 0,		10,1, 4, 6,10, 0, 0, 0,	// A
	8,		0,10, 8, 0, 1, 3, 9, 5,		8, 4, 6, 1, 3, 4, 5, 6,	// B
	3,		2, 0, 8, 0, 0, 0, 0, 0,		0, 8, 6, 0, 0, 0, 0, 0,	// C
	6,		0, 8, 7, 5, 3, 1, 0, 0,		8, 7, 5, 3, 1, 0, 0, 0,	// D
	4,		2, 0, 8, 9, 0, 0, 0, 0,		0, 8, 6,10, 0, 0, 0, 0,	// E
	3,		2, 0, 9, 0, 0, 0, 0, 0,		0, 8,10, 0, 0, 0, 0, 0,	// F
	5,		2, 0, 8, 6, 4, 0, 0, 0,		0, 8, 6, 4, 9, 0, 0, 0,	// G
	3,		0, 2, 4, 0, 0, 0, 0, 0,		8, 6,10, 0, 0, 0, 0, 0,	// H
	3,		0, 8, 1, 0, 0, 0, 0, 0,		2, 6, 7, 0, 0, 0, 0, 0,	// I
	3,		2, 6, 8, 0, 0, 0, 0, 0,		6, 8,10, 0, 0, 0, 0, 0,	// J
	4,		0,10, 9, 9, 0, 0, 0, 0,		8, 9, 2, 6, 0, 0, 0, 0,	// K
	2,		0, 8, 0, 0, 0, 0, 0, 0,		8, 6, 0, 0, 0, 0, 0, 0,	// L
	4,		8, 0, 9, 2, 0, 0, 0, 0,		0, 9, 2, 6, 0, 0, 0, 0,	// M
	3,		8, 0, 6, 0, 0, 0, 0, 0,		0, 6, 2, 0, 0, 0, 0, 0,	// N
	4,		0, 2, 6, 8, 0, 0, 0, 0,		2, 6, 8, 0, 0, 0, 0, 0,	// O
	4,		9, 0, 2, 4, 0, 0, 0, 0,		0, 2, 4,10, 0, 0, 0, 0,	// P
	6, 		0, 2, 4, 7, 8, 9, 0, 0,		2, 4, 7, 8, 0, 6, 0, 0,	// Q
	5,		8, 0, 2, 4, 9, 0, 0, 0,		0, 2, 4,10, 6, 0, 0, 0,	// R
	5,		2, 0,10, 4, 6, 0, 0, 0,		0,10, 4, 6, 8, 0, 0, 0,	// S
	2,		0, 1, 0, 0, 0, 0, 0, 0,		2, 7, 0, 0, 0, 0, 0, 0,	// T
	3,		0, 8, 6, 0, 0, 0, 0, 0,		8, 6, 2, 0, 0, 0, 0, 0,	// U
	4,		0,10, 7, 4, 0, 0, 0, 0,		10,7, 4, 2, 0, 0, 0, 0,	// V
	4,		0, 8, 9, 6, 0, 0, 0, 0,		8, 9, 6, 2, 0, 0, 0, 0,	// W
	2,		0, 8, 0, 0, 0, 0, 0, 0,		6, 2, 0, 0, 0, 0, 0, 0,	// X
	3,		0, 9, 9, 0, 0, 0, 0, 0,		9, 2, 7, 0, 0, 0, 0, 0,	// Y
	3,		0, 2, 8, 0, 0, 0, 0, 0,		2, 8, 6, 0, 0, 0, 0, 0, // Z
};
